build:
  box:
   id: maven:3.5.4-jdk-8-alpine
  
  steps:
    # Build & Package Microservice Helidon
    - wercker/maven:
      goals: clean compile package
      cache_repo: true
      version: 3.5.2

    # Build Docker image
    - internal/docker-build:
        dockerfile: target/Dockerfile
        image-name: helidon-quickstart-se

    # Docker image, and push to OCIR.     
    - internal/docker-push:
        image-name: helidon-quickstart-se
        working-dir: $WERCKER_ROOT
        tag: $WERCKER_GIT_COMMIT
        username: $OCIR_USERNAME
        password: $OCIR_PASSWORD
        repository: $OCIR_REPO
        registry: $OCIR_ADDR

deploy-to-kubernetes:
  box:
   id: alpine

  steps:
    # https://github.com/wercker/step-bash-template
    # This Wercker step will look for files in our repo with a .template extension.
    # It will expand any environment variables in those files, then remove the
    # template extension.
    - bash-template

    # The step above should leave us with a Kubernetes service and deployment yml files.
    # We'll create a directory to move them to.
    - script:
        name: Prepare Kubernetes files
        code: |
          mkdir $WERCKER_OUTPUT_DIR/kubernetes
          mv kubernetes_*.yml $WERCKER_OUTPUT_DIR/kubernetes

    # `apply` is a good command to use here, as it'll create Kubernetes entities if they are missing.
    - kubectl:
        name: deploy to kubernetes
        server: $OKE_MASTER
        token: $OKE_TOKEN
        insecure-skip-tls-verify: true
        command: apply -f $WERCKER_OUTPUT_DIR/kubernetes/

    # Tell Kubernetes that we're going to wait 60 seconds for the deploy to be successful
    - kubectl:
        name: set deployment timeout
        server: $OKE_MASTER
        token: $OKE_TOKEN
        insecure-skip-tls-verify: true
        command: patch deployment/quickstart-se -p '{"spec":{"progressDeadlineSeconds":60}}'

    # Watch the Kubernetes deployment. Once the pods are considered healthy the step will exit 0
    # If they aren't healthy within 60 seconds, it will exit with a non 0 exit code, and cause the run to fail.
    - kubectl:
        name: check deployment status
        server: $OKE_MASTER
        token: $OKE_TOKEN
        insecure-skip-tls-verify: true
        command: rollout status deployment/quickstart-se
